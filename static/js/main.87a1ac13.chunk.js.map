{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,EAAO,SAAAC,GAAK,OACjB,sBAAKC,MAAQ,gBAAgBC,UAAU,sCAAvC,UACQ,qBAAKC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,0BAAoEC,IAAI,WACrF,6BAAKN,EAAMI,QAAQG,OACnB,6BAAKP,EAAMI,QAAQI,YCHjBC,EAAW,SAAAT,GACvB,OAAQ,qBAAKE,UAAY,YAAjB,SACIF,EAAMU,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCHtBO,G,MAAY,SAAC,GACzB,IAD0BC,EAC3B,EAD2BA,YAAaC,EACxC,EADwCA,aAEpC,OACI,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC4BlDG,E,kDA5Bb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAMRc,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SANrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJE,E,qDAUnB,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAE1C,WAAU,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YACbU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OACE,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAYW,YAAY,kBAAkBC,aAAce,KAAKf,eAC7D,cAAC,EAAD,CAAUJ,SAAUoB,W,GAvBZI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.87a1ac13.chunk.js","sourcesContent":["import react from 'react';\r\nimport './card-styles.css';\r\n\r\nexport const Card = props => (\r\n        <div class = \"cardcontainer\" className=\"card-container card-container:hover\">\r\n                <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"images\" />\r\n           <h2>{props.monster.name}</h2>\r\n           <h3>{props.monster.email}</h3>\r\n        </div>\r\n);","import react from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card-component';\r\n\r\nexport const CardList = props => {\r\n return (<div className = \"card-list\">\r\n            {props.monsters.map(monster => (\r\n              <Card key = {monster.id} monster = {monster} />\r\n            ))}\r\n  </div>);\r\n};","import react from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>\r\n{\r\n    return (\r\n        <input type=\"search\" placeholder={placeholder} onChange={handleChange} />\r\n    );\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport {CardList} from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: ''\r\n    };\r\n  }\r\n  handleChange = e => {\r\n    this.setState({searchField: e.target.value});\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(users => this.setState({monsters: users}));\r\n  }\r\n  render() {\r\n    const  { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\r\n    return (\r\n      <div className=\"App\">\r\n          <h1> Monsters Rolex </h1>\r\n          <SearchBox  placeholder=\"Search monsters\" handleChange={this.handleChange} />\r\n          <CardList monsters={filteredMonsters} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}